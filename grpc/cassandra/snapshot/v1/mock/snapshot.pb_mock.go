// Code generated by MockGen. DO NOT EDIT.
// Source: grpc/cassandra/snapshot/v1/snapshot.pb.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/linuxuser586/apis/grpc/cassandra/snapshot/v1"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

// MockSnapshotterClient is a mock of SnapshotterClient interface
type MockSnapshotterClient struct {
	ctrl     *gomock.Controller
	recorder *MockSnapshotterClientMockRecorder
}

// MockSnapshotterClientMockRecorder is the mock recorder for MockSnapshotterClient
type MockSnapshotterClientMockRecorder struct {
	mock *MockSnapshotterClient
}

// NewMockSnapshotterClient creates a new mock instance
func NewMockSnapshotterClient(ctrl *gomock.Controller) *MockSnapshotterClient {
	mock := &MockSnapshotterClient{ctrl: ctrl}
	mock.recorder = &MockSnapshotterClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSnapshotterClient) EXPECT() *MockSnapshotterClientMockRecorder {
	return m.recorder
}

// Snapshot mocks base method
func (m *MockSnapshotterClient) Snapshot(ctx context.Context, in *v1.Request, opts ...grpc.CallOption) (*v1.Response, error) {
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Snapshot", varargs...)
	ret0, _ := ret[0].(*v1.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Snapshot indicates an expected call of Snapshot
func (mr *MockSnapshotterClientMockRecorder) Snapshot(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Snapshot", reflect.TypeOf((*MockSnapshotterClient)(nil).Snapshot), varargs...)
}

// MockSnapshotterServer is a mock of SnapshotterServer interface
type MockSnapshotterServer struct {
	ctrl     *gomock.Controller
	recorder *MockSnapshotterServerMockRecorder
}

// MockSnapshotterServerMockRecorder is the mock recorder for MockSnapshotterServer
type MockSnapshotterServerMockRecorder struct {
	mock *MockSnapshotterServer
}

// NewMockSnapshotterServer creates a new mock instance
func NewMockSnapshotterServer(ctrl *gomock.Controller) *MockSnapshotterServer {
	mock := &MockSnapshotterServer{ctrl: ctrl}
	mock.recorder = &MockSnapshotterServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSnapshotterServer) EXPECT() *MockSnapshotterServerMockRecorder {
	return m.recorder
}

// Snapshot mocks base method
func (m *MockSnapshotterServer) Snapshot(arg0 context.Context, arg1 *v1.Request) (*v1.Response, error) {
	ret := m.ctrl.Call(m, "Snapshot", arg0, arg1)
	ret0, _ := ret[0].(*v1.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Snapshot indicates an expected call of Snapshot
func (mr *MockSnapshotterServerMockRecorder) Snapshot(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Snapshot", reflect.TypeOf((*MockSnapshotterServer)(nil).Snapshot), arg0, arg1)
}
