// Code generated by MockGen. DO NOT EDIT.
// Source: grpc/cassandra/clearsnapshot/v1/clearsnapshot.pb.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	v1 "github.com/linuxuser586/apis/grpc/cassandra/clearsnapshot/v1"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

// MockClearSnapshotServiceClient is a mock of ClearSnapshotServiceClient interface
type MockClearSnapshotServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockClearSnapshotServiceClientMockRecorder
}

// MockClearSnapshotServiceClientMockRecorder is the mock recorder for MockClearSnapshotServiceClient
type MockClearSnapshotServiceClientMockRecorder struct {
	mock *MockClearSnapshotServiceClient
}

// NewMockClearSnapshotServiceClient creates a new mock instance
func NewMockClearSnapshotServiceClient(ctrl *gomock.Controller) *MockClearSnapshotServiceClient {
	mock := &MockClearSnapshotServiceClient{ctrl: ctrl}
	mock.recorder = &MockClearSnapshotServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClearSnapshotServiceClient) EXPECT() *MockClearSnapshotServiceClientMockRecorder {
	return m.recorder
}

// Run mocks base method
func (m *MockClearSnapshotServiceClient) Run(ctx context.Context, in *v1.Request, opts ...grpc.CallOption) (*v1.Response, error) {
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Run", varargs...)
	ret0, _ := ret[0].(*v1.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Run indicates an expected call of Run
func (mr *MockClearSnapshotServiceClientMockRecorder) Run(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockClearSnapshotServiceClient)(nil).Run), varargs...)
}

// MockClearSnapshotServiceServer is a mock of ClearSnapshotServiceServer interface
type MockClearSnapshotServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockClearSnapshotServiceServerMockRecorder
}

// MockClearSnapshotServiceServerMockRecorder is the mock recorder for MockClearSnapshotServiceServer
type MockClearSnapshotServiceServerMockRecorder struct {
	mock *MockClearSnapshotServiceServer
}

// NewMockClearSnapshotServiceServer creates a new mock instance
func NewMockClearSnapshotServiceServer(ctrl *gomock.Controller) *MockClearSnapshotServiceServer {
	mock := &MockClearSnapshotServiceServer{ctrl: ctrl}
	mock.recorder = &MockClearSnapshotServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClearSnapshotServiceServer) EXPECT() *MockClearSnapshotServiceServerMockRecorder {
	return m.recorder
}

// Run mocks base method
func (m *MockClearSnapshotServiceServer) Run(arg0 context.Context, arg1 *v1.Request) (*v1.Response, error) {
	ret := m.ctrl.Call(m, "Run", arg0, arg1)
	ret0, _ := ret[0].(*v1.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Run indicates an expected call of Run
func (mr *MockClearSnapshotServiceServerMockRecorder) Run(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockClearSnapshotServiceServer)(nil).Run), arg0, arg1)
}
